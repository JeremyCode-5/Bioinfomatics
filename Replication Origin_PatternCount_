#Code Challenge: Implement PatternCount (reproduced below).
     #Input: Strings Text and Pattern.
     #Output: Count(Text, Pattern).

#PatternCount(Text, Pattern)
  #count ← 0
  #for i ← 0 to |Text| − |Pattern|
    #if Text(i, |Pattern|) = Pattern
      #count ← count + 1
  #return count
#Some notes on how code challenges work:

#When you click "Download Dataset", you will receive a randomized dataset. Run your program (in the programming language of your choice) on this dataset, and then return the output of your program in the text field below. (Please do not enter your code in the browser.)
#You can see how you should format your answer by looking at the sample output and extra dataset.
#Every time you click "Try Again", you will need to download a new dataset.



def CountOccurrences(string, substring): 
  
    # Initialize count and start to 0 
    count = 0
    start = 0
  
    # Search through the string till 
    # we reach the end of it 
    while start < len(string): 
  
        # Check if a substring is present from 
        # 'start' position till the end 
        pos = string.find(substring, start) 
  
        if pos != -1: 
            # If a substring is present, move 'start' to 
            # the next position from start of the substring 
            start = pos + 1
  
            # Increment the count 
            count += 1
        else: 
            # If no further substring is present 
            break
    # return the value of count 
    return count 
  
# Driver Code 
string = "CAATGTAAAATGTAAATATGTAAAATGTAAAACTGTCGTGATGTAAAAGTCCTTTCAATGTAAAGTACAATGTAAAGCGTATGTAAATTAGTGAAAAAATGTAAACATGTAAATGATGTAAACGGATGTAAAAATGTAAAGATGTAAATGCTGATGTAAAAGATGTAAAGAGGATGTAAAACAGATGTAAAAATGTAAATATGTAAAATGTAAAATGTAAACTTCGATGTAAAATGTAAAATGTAAACAATGTAAATCTTATGTAAACCTTTATGTAAATTATGTAAAGATGTAAAATGTAAAATGTAAAATGTAAAATGTAAATATGTAAAAATGTAAAATGTAAAATGTAAATATGTAAAGCGATGTAAAGATGTAAAGATGTAAATATGTAAATTATGTAAATATGTAAAACATGTAAAAAATCCGGTCATGTAAAATGTAAACATGTAAAACTATTCAGAACCTCCGGATGTAAATATGTAAAATGTAAAAATGTAAAGATGTAAAGAATGTAAAGAAGCTCATCAGTAGAAATGTAAATAATGTAAATTATGTAAAATGTAAAACATGTAAAATGTAAAAATGTAAAGATGTAAAGATGTAAAATGTAAAGAACCTATGTAAAATGTAAAAATGTAAATCATTATGTAAAATATGTAAAAATGTAAAAGTAATGTAAAACTCCCTATGTAAACCGACATGTCTACGATGTAAACCTGATGTAAATTCCATGTAAAATGTAAAATGTAAAGATGTAAAATGTAAACTCATGTAAAATGTAAAGTGTATGTAAACTCATGTAAACCATGTAAAATGTAAAAGGATGTAAACAAATGTAAAATGTAAATATTAAATGTAAAAATGTAAACTATGTAAACCAGATGTAAACCTCATGTAAAATGTAAAAAATGTAAAAGGGCCCAATGTAAAAATGTAAAATAATGTAAACTCATGTAAAAATGTAAAGATAATGTAAAATGTAAAATGTAAACTATGTAAAATGTAAAGTGAATGTAAAATGTAAATCCACATGTAAA"
print(CountOccurrences(string, "ATGTAAAAT"))
